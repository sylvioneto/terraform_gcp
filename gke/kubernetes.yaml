steps:
# Build Helm Deployment Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/helm', '.']
  id: build-helm
- name: 'gcr.io/$PROJECT_ID/helm:latest'
  args: ['version', '--client']
  env:
    - SKIP_CLUSTER_CONFIG=true
  id: test-helm

# Kubernetes deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes/namespaces.yaml']
  id: create-namespaces

- id: deploy-ingress-nginx
  name: 'gcr.io/$PROJECT_ID/helm:latest'
  args: ['upgrade', '--install', 'ingress-nginx', 'ingress-nginx/ingress-nginx',
   '--version', '3.19.0', 
   '--namespace', 'nginx',
   '-f', 'kubernetes/ingress-nginx.yaml',
   '--set', 'controller.service.loadBalancerIP=${_NGINX_IP}'
  ]
  env:
  - 'HELM_REPO_NAME=ingress-nginx'
  - 'HELM_REPO_URL=https://kubernetes.github.io/ingress-nginx'

- id: deploy-external-dns
  name: 'gcr.io/$PROJECT_ID/helm:latest'
  args: ['upgrade', '--install', 'external-dns', 'bitnami/external-dns',
   '--version', '4.5.0', 
   '--namespace', 'external-dns',
   '-f', 'kubernetes/external-dns.yaml',
  ]
  env:
  - 'HELM_REPO_NAME=bitnami'
  - 'HELM_REPO_URL=https://charts.bitnami.com/bitnami'

options:
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-dev-cluster'
